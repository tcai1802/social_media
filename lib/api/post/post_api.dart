import 'dart:io';
import 'package:dio/dio.dart';
import 'package:http/http.dart' as http;
import 'package:flutter_dotenv/flutter_dotenv.dart';
import 'package:social_media/constants/index.dart';

class PostApi {
  Future<Response> createPostApi(List<File> imageList) async {
    List<MultipartFile> fileList = [];
    for (File data in imageList) {
      MultipartFile imageData = MultipartFile.fromFileSync(
        data.path,
      );
      fileList.add(imageData);
    }

    final formData = FormData.fromMap({
      "caption": "This is post test flutter 1 upload",
      "photos": fileList,
    });
    final dio = Dio();
    var addPostUri = Uri.https(dotenv.env["URL_MAIN"]!, ApiPath.addPost);
    Response res = await dio.postUri(
      addPostUri,
      data: formData,
      options: Options(
        headers: {
          "Authorization":
              "JWT eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..HaqxuBzrwOoVfrFi3TSA8eXZ04Y91iobq83tFIaFNlc"
        },
      ),
    );
    return res;
  }

  Future<Map<String, dynamic>?> editPostApi() async {}

  Future<Map<String, dynamic>?> deletePostApi() async {}

  // show app post
  Future<Response?> showAllPostApi() async {
    Uri allPostUri = Uri.https(dotenv.env["URL_MAIN"]!, ApiPath.allPosts);
    final dio = Dio();
    try {
      return await dio.getUri(
        allPostUri,
        options: Options(
          headers: {
            "Authorization":
                "JWT eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..HaqxuBzrwOoVfrFi3TSA8eXZ04Y91iobq83tFIaFNlc"
          },
        ),
      );
    } catch (e) {
      return null;
    }
  }
}
